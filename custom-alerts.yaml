apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  creationTimestamp: null
  labels:
    prometheus: custom-alerts
    role: custom-alert-rules
    app: prometheus-operator
    release: prometheus-operator
  name: prometheus-custom-alerts
spec:
  groups:
  - name: nodepool-status.rules
    rules:
    - record: nodepool_allocatable_pods
      expr: sum(kube_node_status_allocatable_pods * on (node) group_left(label_agentpool) kube_node_labels) by (label_agentpool)
    - record: nodepool_allocated_pods
      expr: sum(kube_pod_info * on (node) group_left(label_agentpool) kube_node_labels) by (label_agentpool)
    - alert: NodepoolPodsFull
      expr: 100 - (nodepool_allocated_pods/nodepool_allocatable_pods * 100) < 5
      for: 2m
      labels:
        severity: high
      annotations:
        message: '{{ if eq $labels.label_agentpool ""}}Unpooled nodes have{{ else }}Nodepool {{ $labels.label_agentpool }} has{{end}} {{ printf "%.2f" $value }}% pod capacity remaining!'
    - alert: NodepoolLowPodCapacity
      expr: 100 - (nodepool_allocated_pods/nodepool_allocatable_pods * 100) < 20
      for: 5m
      labels:
        severity: high
      annotations:
        message: '{{ if eq $labels.label_agentpool ""}}Unpooled nodes have{{ else }}Nodepool {{ $labels.label_agentpool }} has{{end}} {{ printf "%.2f" $value }}% pod capacity remaining.'
  - name: node-status.rules
    rules:
    - alert: NodeDiskPressure
      expr: sum by (node) (kube_node_status_condition{condition="DiskPressure",job="kube-state-metrics",status="true"}) == 1
      for: 2m
      labels:
        severity: high
      annotations:
        message: '{{ $labels.node }} has low disk capacity.'
    - alert: NodeMemoryPressure
      expr: sum by (node) (kube_node_status_condition{condition="MemoryPressure",job="kube-state-metrics",status="true"}) == 1
      for: 2m
      labels:
        severity: high
      annotations:
        message: '{{ $labels.node }} has low memory.'
    - alert: NodePIDPressure
      expr: sum by (node) (kube_node_status_condition{condition="PIDPressure",job="kube-state-metrics",status="true"}) == 1
      for: 2m
      labels:
        severity: high
      annotations:
        message: 'Too many processes are running on {{ $labels.node }}.'
    - alert: NodeNetworkUnavailable
      expr: sum by (node) (kube_node_status_condition{condition="NetworkUnavailable",job="kube-state-metrics",status="true"}) == 1
      for: 2m
      labels:
        severity: high
      annotations:
        message: 'The network for {{ $labels.node }} is not correctly configured.'
    - alert: NodeNotReady
      expr: sum by (node) (kube_node_status_condition{condition="Ready",job="kube-state-metrics",status="true"}) == 0
      for: 2m
      labels:
        severity: high
      annotations:
        message: '{{ $labels.node }} is not in a Ready state but did not trip a Network or Pressure condition.'
    - alert: NodeUnscheduleable
      expr: sum by (node) (kube_node_spec_unschedulable{job="kube-state-metrics"}) == 1
      for: 1h
      labels:
        severity: high
      annotations:
        message: '{{ $labels.node }} is unscheduleable for over 1 hour. If it is healthy, is it cordoned?'
    - alert: NodePodsFull
      expr: 100 - (sum(kube_pod_info) by (node) / sum(kube_node_status_allocatable_pods) by (node) * 100) < 5
      for: 2m
      labels:
        severity: high
      annotations:
        message: '{{ $labels.node }} has {{ printf "%.2f" $value }}% pod capacity remaining!'
    - alert: NodeLowMemory
      expr: sum by (nodename) (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes * on(instance,job) group_left(nodename) node_uname_info * 100) < 15
      for: 5m
      labels:
        severity: medium
      annotations:
        message: '{{ $labels.nodename }} has {{ printf "%.2f" $value }}% available memory.'
    - alert: NodeLowDisk
      expr: sum by (nodename, device, mountpoint, fstype) (node_filesystem_avail_bytes / node_filesystem_size_bytes * on(instance,job) group_left(nodename) node_uname_info * 100) < 15
      for: 5m
      labels:
        severity: medium
      annotations:
        message: '{{ $labels.device }} on {{ $labels.nodename }} has {{ printf "%.2f" $value }}% available disk space.'
    - alert: NodeLowCPU
      expr: sum by (nodename) (avg by(instance, job) (irate(node_cpu_seconds_total{mode="idle"}[5m])) * on(instance,job) group_left(nodename) node_uname_info * 100) < 15
      for: 5m
      labels:
        severity: medium
      annotations:
        message: '{{ $labels.nodename }} has {{ printf "%.2f" $value }}% available CPU.'
    - alert: NodeLowPodCapacity
      expr: 100 - (sum(kube_pod_info) by (node) / sum(kube_node_status_allocatable_pods) by (node) * 100) < 20
      for: 5m
      labels:
        severity: medium
      annotations:
        message: '{{ $labels.node }} has {{ printf "%.2f" $value }}% pod capacity remaining.'
  - name: certificates.rules
    rules:
    - alert: SSLCertExpiringSoon
      expr: sum by (target, instance) (probe_ssl_earliest_cert_expiry{job="blackbox-exporter-prometheus-blackbox-exporter"} - time()) < 86400 * 20
      for: 2m
      labels:
        severity: high
      annotations:
        message: 'SSL certificate for {{ $labels.instance }} expires in less than 20 days.'


